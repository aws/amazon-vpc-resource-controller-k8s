name: Automatic Tests

on:
  push:
    branches: [master]
  pull_request:

permissions:
  contents: read

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Set up kubebuilder
        run: |
          arch=$(go env GOARCH)
          os=$(go env GOOS)
          curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_${os}_${arch}.tar.gz | tar -xz -C /tmp/
          sudo mv /tmp/kubebuilder_2.3.1_${os}_${arch} /usr/local/kubebuilder
          export PATH=$PATH:/usr/local/kubebuilder/bin
      - name: Unit Tests
        run: make test
  binary-build:
    name: Binary build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Check source code formatting
        run: make check-format
      - name: Build controller binary
        run: make controller
      - name: Check binary runs
        run: ./bin/controller -h
  deprecated-apigroups:
    name: Detect deprecated apiGroups
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v3
      - name: Download Pluto
        run: |
          version=$(curl -sL https://api.github.com/repos/FairwindsOps/pluto/releases/latest | jq -r ".tag_name")
          number=${version:1}
          wget https://github.com/FairwindsOps/pluto/releases/download/${version}/pluto_${number}_linux_amd64.tar.gz
          sudo tar -C /usr/local -xzf pluto_${number}_linux_amd64.tar.gz
      - name: Use pluto
        run: |
          /usr/local/pluto detect-files -d .
