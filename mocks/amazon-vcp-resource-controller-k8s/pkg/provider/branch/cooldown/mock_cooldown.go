// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-vpc-resource-controller-k8s/pkg/provider/branch/cooldown (interfaces: CoolDown)

// Package mock_cooldown is a generated GoMock package.
package mock_cooldown

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockCoolDown is a mock of CoolDown interface.
type MockCoolDown struct {
	ctrl     *gomock.Controller
	recorder *MockCoolDownMockRecorder
}

// MockCoolDownMockRecorder is the mock recorder for MockCoolDown.
type MockCoolDownMockRecorder struct {
	mock *MockCoolDown
}

// NewMockCoolDown creates a new mock instance.
func NewMockCoolDown(ctrl *gomock.Controller) *MockCoolDown {
	mock := &MockCoolDown{ctrl: ctrl}
	mock.recorder = &MockCoolDownMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoolDown) EXPECT() *MockCoolDownMockRecorder {
	return m.recorder
}

// GetCoolDownPeriod mocks base method.
func (m *MockCoolDown) GetCoolDownPeriod() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoolDownPeriod")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetCoolDownPeriod indicates an expected call of GetCoolDownPeriod.
func (mr *MockCoolDownMockRecorder) GetCoolDownPeriod() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoolDownPeriod", reflect.TypeOf((*MockCoolDown)(nil).GetCoolDownPeriod))
}

// SetCoolDownPeriod mocks base method.
func (m *MockCoolDown) SetCoolDownPeriod(arg0 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCoolDownPeriod", arg0)
}

// SetCoolDownPeriod indicates an expected call of SetCoolDownPeriod.
func (mr *MockCoolDownMockRecorder) SetCoolDownPeriod(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCoolDownPeriod", reflect.TypeOf((*MockCoolDown)(nil).SetCoolDownPeriod), arg0)
}
